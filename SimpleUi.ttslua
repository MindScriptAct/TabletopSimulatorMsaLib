
ButtonDefaults = {
  label = "[Button]",
  function_owner = Global,
  click_function = "_DebugClick",
  font_size = 100,
  width = 100,
  height = 100,
  position = {0, 0, 0},
  rotation = {0, 0, 0},
  scale = {1, 1, 1},
  color = {1, 1, 1},
  font_color = {0, 0, 0},
  hover_color = nil,
  press_color = nil,
  tooltip = nil,
}

function CreateButton(obj, buttonLabel, clickFunctionName)
  if obj == nil then PrintError("button object can't be nil."); return; end

  _TempButtonInfo = {
    _targetObject = obj,
    label = ButtonDefaults.label,
    function_owner = ButtonDefaults.function_owner,
    click_function = ButtonDefaults.click_function,
    font_size = ButtonDefaults.font_size,
    width = ButtonDefaults.width,
    height = ButtonDefaults.height,
    position = {ButtonDefaults.position[1], ButtonDefaults.position[2], ButtonDefaults.position[3]},
    rotation = {ButtonDefaults.rotation[1], ButtonDefaults.rotation[2], ButtonDefaults.rotation[3]},
    scale = {ButtonDefaults.scale[1], ButtonDefaults.scale[2], ButtonDefaults.scale[3]},
    color = {ButtonDefaults.color[1], ButtonDefaults.color[2], ButtonDefaults.color[3]},
    font_color = {ButtonDefaults.font_color[1], ButtonDefaults.font_color[2], ButtonDefaults.font_color[3]},
    hover_color = nil,
    press_color = nil,
    tooltip = nil,
  }
  if ButtonDefaults.hover_color != nil then _TempButtonInfo.hover_color = {ButtonDefaults.hover_color[1], ButtonDefaults.hover_color[2], ButtonDefaults.hover_color[3]} end;
  if ButtonDefaults.press_color != nil then _TempButtonInfo.press_color = {ButtonDefaults.press_color[1], ButtonDefaults.press_color[2], ButtonDefaults.press_color[3]} end;
  if ButtonDefaults.tooltip != nil then _TempButtonInfo.tooltip = ButtonDefaults.tooltip end;

  if buttonLabel != nil then _TempButtonInfo.label = buttonLabel; end
  if clickFunctionName != nil then _TempButtonInfo.click_function = clickFunctionName; end

    _allButtonsToCreate[#_allButtonsToCreate + 1] = _TempButtonInfo;

  if _allButionCreationIsOn == false then
      Wait.frames(_InstantiateButton, 1)
      _allButionCreationIsOn = true;
  end

  return _FluidButtonFunctions;
end

_allButionCreationIsOn = false;
_allButtonsToCreate = {};
_TempButtonInfo = nil;

_FluidButtonFunctions =  {
  SetLabel = function(label)
    _TempButtonInfo.label = label;
    return _FluidButtonFunctions;
  end,
  SetFunctionOwner = function(functionOwner)
    _TempButtonInfo.function_owner = functionOwner;
    return _FluidButtonFunctions;
  end,
  SetClickFunction = function(clickFunction)
    _TempButtonInfo.click_function = clickFunction;
    return _FluidButtonFunctions;
  end,
  SetFontSize = function(fontSize)
    _TempButtonInfo.font_size = fontSize;
    return _FluidButtonFunctions;
  end,
  SetWidth = function(width)
    _TempButtonInfo.width = width;
    return _FluidButtonFunctions;
  end,
  SetHeight = function(height)
    _TempButtonInfo.height = height;
    return _FluidButtonFunctions;
  end,
  Resize = function(width, height)
    _TempButtonInfo.width = width;
    _TempButtonInfo.height = height;
    return _FluidButtonFunctions;
  end,
  Move = function (x, y, z)
    _TempButtonInfo.position.x = x;
    _TempButtonInfo.position.y = y;
    _TempButtonInfo.position.z = z;
    return _FluidButtonFunctions;
  end,
  Rotate = function (x, y, z)
    _TempButtonInfo.rotation.x = x;
    _TempButtonInfo.rotation.y = y;
    _TempButtonInfo.rotation.z = z;
    return _FluidButtonFunctions;
  end,
  Scale = function (x, y, z)
    _TempButtonInfo.scale.x = x;
    _TempButtonInfo.scale.y = y;
    _TempButtonInfo.scale.z = z;
    return _FluidButtonFunctions;
  end,
  SetColor = function (r, g, b)
    _TempButtonInfo.color.r = r;
    _TempButtonInfo.color.g = g;
    _TempButtonInfo.color.b = b;
    return _FluidButtonFunctions;
  end,
  SetHoverColor = function (r, g, b)
    _TempButtonInfo.hover_color.r = r;
    _TempButtonInfo.hover_color.g = g;
    _TempButtonInfo.hover_color.b = b;
    return _FluidButtonFunctions;
  end,
  SetPressColor = function (r, g, b)
    _TempButtonInfo.press_color.r = r;
    _TempButtonInfo.press_color.g = g;
    _TempButtonInfo.press_color.b = b;
    return _FluidButtonFunctions;
  end,
  SetTooltip = function(tooltip)
    _TempButtonInfo.tooltip = tooltip;
    return _FluidButtonFunctions;
  end
}

function _DebugClick()
  print("DEBUG : Button clicked!");
end

function _InstantiateButton()
  _allButionCreationIsOn = false;
  for i = 1, #_allButtonsToCreate do
      local buttonProperties = _allButtonsToCreate[i];
      buttonProperties._targetObject.createButton(buttonProperties);
  end
end
